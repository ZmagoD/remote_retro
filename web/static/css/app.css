@import './colors.css';
@import '../js/components/css_modules/grouping_idea_card.css';

:global(.ReactModal__Overlay.ReactModal__Overlay--after-open) {
  display: flex;
  justify-content: center;
}

body {
  overflow-y: auto;
}

form {
  margin-block-end: 0;
}
/*
This overrides some SemanticUI default styling,
as their 'bold' fonts vary wildly in their appearance across browsers.
If you truly need to make text bold, use the <strong></strong> tag
*/
:global(.ui.label),
:global(.ui.button),
:global(.ui.header),
:global(.ui.items>.item>.content>.header) {
  font-weight: 100;
}

:global .landing-page {
  --padding: 5.5rem;
  .welcome-wrapper {
    padding: var(--padding) 0 calc(1rem + var(--padding)) var(--padding);
  }

  .gradient-background {
    background-image: linear-gradient(to bottom left, white, #D7C7E1);
  }

  .stride-link {
    color: inherit;

    &:hover {
      text-decoration: underline;
    }
  }

  .by-stride-consulting {
    /* exactly midway between header/subheader font-sizes in content below*/
    font-size: 16px;
    color: var(--semantic-sub-header-grey);
    font-weight: 100;
    margin-left: 0;
    line-height: normal;
  }

  .an-open-source-project-from-stride-consulting .ui.header {
    margin-bottom: 0;
  }

  .ui.segments {
    margin: 0;
  }

  .social {
    padding-top: 1.25rem;
    float: right;
    /* explicit z-index to ensure clickability of floated elements */
    position: relative;
    z-index: 1;

    & :not(:last-child) {
      margin-right: 0.5rem;
    }
  }

  .cta-wrapper {
    .sign-in {
      margin: 1rem 0;
    }

    padding: calc(2 * var(--padding)) var(--padding);

    @media(min-width: 1040px) {
      padding: calc(2 * var(--padding));
    }
  }

  .trusted-by {
    .column {
      img {
        min-height: 6rem;
        width: 50%;
      }

      @media(min-width: 768px) {
        img {
          min-height: 2rem;
          width: 90%;
        }
      }

      @media(min-width: 1040px) {
        img {
          width: 72%;
        }
      }
    }
  }

  .testimonials {
    --semantic-medium-header-font-size: 1.28571429em;

    .testimonial {
      font-style: italic;
      font-family: 'Times New Roman';
      font-weight: 600;
      font-size: var(--semantic-medium-header-font-size);
      line-height: var(--semantic-medium-header-font-size);

      /*
      the testimonial's text should be left justified, but we want the
      opening quote outside this justification so that letters align */
      .first-letter:before {
        position: absolute;
        left: 0.7rem;
        content: "â€™";

        -webkit-transform: rotateY(180deg) skewX(15deg);
        transform: rotateY(180deg) skewX(15deg);
      }
    }

    .testimonial, .author-attribution {
      color: var(--semantic-dark-grey);
    }

    .author-attribution {
      float: right;
      position: relative;
      right: 0.5rem;

      .author {
        font-weight: bolder;
      }
    }
  }

  @media(max-width: 450px) and (orientation: portrait) {
    .welcome-wrapper {
      padding: 2.5rem;
    }

    .social {
      display: none;
    }

    .cta-wrapper {
      padding: 3.5rem;
    }
  }

  h1 {
    font-size: 4rem;
    font-weight: 200;
    line-height: 4rem;
    color: var(--semantic-teal);

    /* ensure header aligns with text below */
    transform: translate3d(-0.35rem, 0, 0);
  }
}

@keyframes FadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

:global .ui.modal {
  top: 30%;

  &:global(.welcome) {
    top: 5%;

    :global(.ui.form.content) {
      transition: opacity 1s ease-out;
      opacity: 0;
    }
  }
}

:global(.ui.steps) {
  :global(.step) {
    background-color: var(--semantic-secondary);

    animation: FadeIn 1s linear;
    animation-fill-mode: both;

    --initial-delay: 2s;
    --increment-delay: 0.5s;
    &:nth-child(1) { animation-delay: var(--initial-delay); }
    &:nth-child(2) { animation-delay: calc(var(--initial-delay) + var(--increment-delay)); }
    &:nth-child(3) { animation-delay: calc(var(--initial-delay) + calc(var(--increment-delay) * 2)); }
    &:nth-child(4) { animation-delay: calc(var(--initial-delay) + calc(var(--increment-delay) * 3)); }
    &:nth-child(5) { animation-delay: calc(var(--initial-delay) + calc(var(--increment-delay) * 4)); }
    &:nth-child(6) { animation-delay: calc(var(--initial-delay) + calc(var(--increment-delay) * 5)); }
    &:nth-child(7) { animation-delay: calc(var(--initial-delay) + calc(var(--increment-delay) * 6)); }

    /* Fix inexplicale styling error that causes box shadow to disappear on Nth child's box-shadow disappearing */
    /* This issue only appears when using the animation above. */
    &:global(.grouping) {
      box-shadow: 0px 1px 1px rgba(34, 36, 38, .15);
      margin-bottom: 2px;
    }
  }
}

:global .very.padded.segment.no-margin-bottom {
  margin-bottom: 0;
}

:global .ui.branded-header-container {
  background: var(--lightest-grey);

  display: flex;
  justify-content: space-between;

  border: none;
  padding: 0.4rem 0.5rem;
  margin-bottom: 0;
  z-index: calc(var(--grouping-card-z-index) + 1);

  > div, > a {
    transform: translate3d(0, 1px, 0);
  }

  .left-branded-header {
    margin-bottom: 0;

    p {
      font-weight: 200;
      padding-left: 0.5rem;
    }
  }

  .right-branded-header {
    align-items: flex-end;

    padding-right: 0.3rem;
    margin-right: 0;

    .built-by-wrapper {
      display: none;

      @media(min-width: 768px) {
        overflow: hidden;
        display: block;
        border-right: 1px solid lightgray;
        margin-right: 1rem;
      }
    }

    .logo-text {
      font-size: 12px;
      font-weight: 500;
      color: var(--semantic-dark-grey);
      padding-right: 0.2rem;
      transform: translate3d(0, 1px, 0);
    }

    :global(.ui.tiny.image) {
      /* necessary for IE 10 & 11, as height: auto applies no restriction to height of svgs,
       * and height: 100% only applies if the element's container has an explicit height
       */
      height: 1.5rem;
      width: auto;
      vertical-align: bottom;
    }
  }
}

:global .visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}

:global .ui.modal.retro-format-modal {
  top: 2.5%;

  @media (min-width: 768px) {
    top: 15%;
  }

  .items {
    margin: 0;
    padding: 0;

    .item {
      margin: 0;
      padding: 1.5rem;
      cursor: pointer;

      .ui.tiny.image {
        @media (max-width: 767px) {
          width: 35px;
        }
      }
    }
  }

  input:checked + label.item {
    background-color: var(--semantic-secondary);
  }

  .submit-button-wrapper {
    border-top: 1px solid var(--semantic-divider-border-top-color);
    padding: 1.25rem;
  }
}

:global(.bold) {
  font-weight: bold;
}

:global(.retros-list) {
  a {
    font-size: 1.1rem;
  }
}

:global(.nested-action-items-list) {
  :global(.action-items-label) {
    cursor: pointer;
  }

  i {
    transition: 50ms transform ease-out;
  }

  &:global(.hidden) {
    i {
      transform: rotate(-90deg) translate(-2px,0px);
    }

    ul {
      display: none;
    }
  }
}

:global img {
  -webkit-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

:global(.react-root .ui.active.large.centered.text.loader) {
  width: 10rem;
}

:global(.ReactModal__Content.ReactModal__Content--after-open:focus) {
  outline: none;
}

:global([draggable=true]) {
  cursor: move;
}

:global(.overflowed) {
  --width: 5px;
  --inverse: -5px;
  box-shadow:
    inset 0 var(--inverse) var(--width) var(--inverse) rgba(0,0,0,.7),
    inset 0 var(--width)   var(--width) var(--inverse) rgba(0,0,0,.7),
    0px 1px 1px -1px #C0C1C2;
}

/* fixes encoding error present in SemanticUI */
/*   - see https://github.com/Semantic-Org/Semantic-UI-React/issues/2325 for fix discussion */
:global(ul.ui.list li:before) {
  content: "\2022";
}

:global(ul.ui.list li p.list-item-note) {
  margin: 0.1rem 0 0 0.75rem;

  &:before {
    content: "-";
    display: inline-flex;
    margin-left: -0.75rem;
    position: absolute;
  }
}

:global(.optional) {
  color: #A0A0A8;
}

/*
/  preposterous iOS Safari-specific hack to avoid zooming in on form inputs on focus.
/    - requires 16px or larger font-size to avoid zoom
/      - https://stackoverflow.com/questions/2989263/disable-auto-zoom-in-input-text-tag-safari-on-iphone
/    - include labels and submit buttons for visual consistency in forms
*/
@supports (-webkit-overflow-scrolling: touch) {
  select, textarea, input[type="text"], label, button[type="submit"] {
    font-size: 16px !important;
  }
}

:global(.copy-page .very.padded.segment) {
  @media(min-width: 1040px) {
    max-width: 960px;
  }
}

:global(.retro-show-page) {
  display: flex;
  flex-direction: column;
  flex: 1;

  main,
  :global(.react-root),
  :global(.stage) {
    display: flex;
    flex-direction: column;
    flex: 1;

    &:global(.prime-directive) {
      display: block;
    }
  }
}

:global(.retro-show-page) {
  :global(.portal) {
    margin-right: 1rem;
    border: none;
    padding: 0;
    overflow: hidden;
    background-color: transparent;
  }

  :global(.question.circle.outline.icon) {
    margin-right: 0;
    transform: translate3d(0, 1px, 0);
    cursor: pointer;
  }

  :global(.help-icon) {
    width: 35.23px;
    height: 23.22px;
    padding: 0;
  }
}
